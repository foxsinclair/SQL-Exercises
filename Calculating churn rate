Calculating Churn Rates
Four months into launching Codeflix, management asks you to look into subscription churn rates. Itâ€™s early on in the business and people are excited to know how the company is doing.

The marketing department is particularly interested in how the churn compares between two segments of users. They provide you with a dataset containing subscription data for users who were acquired through two distinct channels.

The dataset provided to you contains one SQL table, subscriptions. Within the table, there are 4 columns:

id - the subscription id
subscription_start - the start date of the subscription
subscription_end - the end date of the subscription
segment - this identifies which segment the subscription owner belongs to
Codeflix requires a minimum subscription length of 31 days, so a user can never start and end their subscription in the same month.

 WITH months AS
 (SELECT
  '2017-01-01' as first_day,
  '2017-01-31' as last_day
UNION
SELECT
  '2017-02-01' as first_day,
  '2017-02-29' as last_day
UNION
SELECT
  '2017-03-01' as first_Day,
  '2017-03-31' as last_day
),
cross_join AS 
(SELECT * FROM subscriptions
CROSS JOIN months
),
status AS
(SELECT
id,
first_day as month,
CASE
 WHEN (subscription_start < first_day)
 AND (subscription_end > first_day OR
 subscription_end IS NULL)
 AND (segment = 87) THEN 1
 ELSE 0
 END AS is_active_87,
CASE
 WHEN (subscription_start < first_day)
 AND (subscription_end > first_day OR
 subscription_end IS NULL)
 AND (segment = 30) THEN 1
 ELSE 0
 END AS is_active_30,
CASE
 WHEN (subscription_end BETWEEN first_day AND last_day)
 AND (segment = 87) THEN 1
 ELSE 0
 END AS is_canceled_87,
CASE
 WHEN (subscription_end BETWEEN first_day AND last_day)
 AND (segment = 30) THEN 1
 ELSE 0
 END AS is_canceled_30
FROM cross_join
),
status_aggregate AS (
  SELECT month,
  SUM(is_active_87) AS sum_active_87,
  SUM(is_active_30) AS sum_active_30,
  SUM(is_canceled_87) AS sum_canceled_87,
  SUM(is_canceled_30) AS sum_canceled_30
  FROM status
  GROUP BY month
),
churn_rate AS (
  SELECT 
  month,
  1.0*sum_canceled_87/sum_active_87 as churn_87,
  1.0*sum_canceled_30/sum_active_30 as churn_30
  FROM status_aggregate
) 
SELECT * FROM churn_rate;
